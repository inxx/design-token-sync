name: Create PR for Design Token

on:
  repository_dispatch:
    types: [update-design-tokens]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        ref: main

    - name: Set safe.directory
      run: |
        git config --global --add safe.directory /home/runner/work/design-token-sync/design-token-sync

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Check if branch exists and get changes
      id: check_branch
      run: |
        BRANCH_NAME="${{ github.event.client_payload.branch }}"
        echo "Checking branch: $BRANCH_NAME"
        
        # Î∏åÎûúÏπòÍ∞Ä Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
        if git fetch origin $BRANCH_NAME; then
          echo "branch_exists=true" >> $GITHUB_OUTPUT
          
          # Î∏åÎûúÏπò Í∞Ñ Ï∞®Ïù¥ ÌôïÏù∏
          CHANGED_FILES=$(git diff --name-only origin/main origin/$BRANCH_NAME)
          if [ -n "$CHANGED_FILES" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes found in:"
            echo "$CHANGED_FILES"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected between main and $BRANCH_NAME"
          fi
        else
          echo "branch_exists=false" >> $GITHUB_OUTPUT
          echo "Branch $BRANCH_NAME not found"
        fi

    - name: Create Pull Request using GitHub API
      if: steps.check_branch.outputs.branch_exists == 'true' && steps.check_branch.outputs.has_changes == 'true'
      run: |
        BRANCH_NAME="${{ github.event.client_payload.branch }}"
        
        # PR ÏÉùÏÑ± Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
        PR_BODY=$(cat <<EOF
        ## üìã Î≥ÄÍ≤ΩÏÇ¨Ìï≠
        ÏóÖÎ°úÎìúÎêú ÎîîÏûêÏù∏ ÌÜ†ÌÅ∞ÏúºÎ°ú ÏûêÎèô ÏÉùÏÑ±Îêú PRÏûÖÎãàÎã§.

        ### üìä ÏÉÅÏÑ∏Ï†ïÎ≥¥
        - **Ìä∏Î¶¨Í±∞ ÏãúÍ∞Ñ**: ${{ github.event.client_payload.timestamp }}
        - **Î∏åÎûúÏπò**: ${{ github.event.client_payload.branch }}
        - **Î©îÏãúÏßÄ**: ${{ github.event.client_payload.message }}

        ### üîß Î≥ÄÍ≤ΩÎêú ÌååÏùº
        - \`style-dictionary/tokens.json\`: ÏÉàÎ°úÏö¥ ÎîîÏûêÏù∏ ÌÜ†ÌÅ∞
        - \`styles/variables.css\`: ÏûêÎèô ÏÉùÏÑ±Îêú CSS Î≥ÄÏàò

        ### ‚úÖ Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏
        - [x] ÎîîÏûêÏù∏ ÌÜ†ÌÅ∞ JSON ÌååÏùº ÏóÖÎç∞Ïù¥Ìä∏
        - [x] CSS Î≥ÄÏàò ÏûêÎèô ÏÉùÏÑ± ÏôÑÎ£å
        - [x] ÎπåÎìú Í≤ÄÏ¶ù ÏôÑÎ£å

        ---
        ü§ñ Ïù¥ PRÏùÄ ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§.
        EOF
        )
        
        # GitHub APIÎ•º ÏÇ¨Ïö©ÌïòÏó¨ PR ÏÉùÏÑ±
        PR_RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d "{
            \"title\": \"üé® ÎîîÏûêÏù∏ ÌÜ†ÌÅ∞ ÏûêÎèô ÏóÖÎç∞Ïù¥Ìä∏\",
            \"body\": $(echo "$PR_BODY" | jq -R -s .),
            \"head\": \"$BRANCH_NAME\",
            \"base\": \"main\"
          }")
        
        # PR ÏÉùÏÑ± Í≤∞Í≥º ÌôïÏù∏
        if echo "$PR_RESPONSE" | grep -q '"number"'; then
          PR_NUMBER=$(echo "$PR_RESPONSE" | grep -o '"number":[0-9]*' | grep -o '[0-9]*')
          PR_URL=$(echo "$PR_RESPONSE" | grep -o '"html_url":"[^"]*' | cut -d'"' -f4)
          echo "‚úÖ PR #$PR_NUMBER ÏÉùÏÑ± ÏôÑÎ£å: $PR_URL"
          
          # ÎùºÎ≤® Ï∂îÍ∞Ä
          echo "ÎùºÎ≤® Ï∂îÍ∞Ä Ï§ë..."
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels \
            -d '{"labels": ["design-tokens", "auto-generated"]}' || echo "‚ö†Ô∏è ÎùºÎ≤® Ï∂îÍ∞Ä Ïã§Ìå® (Î¨¥Ïãú)"
          
          echo "üéâ PR ÏÉùÏÑ± Î∞è ÎùºÎ≤® Ï∂îÍ∞Ä ÏôÑÎ£å"
        else
          echo "‚ùå PR ÏÉùÏÑ± Ïã§Ìå®:"
          echo "$PR_RESPONSE"
          exit 1
        fi

    - name: Handle no changes case
      if: steps.check_branch.outputs.branch_exists == 'true' && steps.check_branch.outputs.has_changes == 'false'
      run: |
        echo "‚ÑπÔ∏è Î≥ÄÍ≤ΩÏÇ¨Ìï≠Ïù¥ ÏóÜÏñ¥ PRÏùÑ ÏÉùÏÑ±ÌïòÏßÄ ÏïäÏïòÏäµÎãàÎã§."
        
    - name: Handle missing branch case
      if: steps.check_branch.outputs.branch_exists == 'false'
      run: |
        echo "‚ùå Î∏åÎûúÏπò '${{ github.event.client_payload.branch }}'Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§." 